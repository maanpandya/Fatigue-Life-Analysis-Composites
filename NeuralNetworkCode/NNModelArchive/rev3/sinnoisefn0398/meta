file = 'datainclstatic'
folder = 'DataProcessing/processed'
target_columns = ['Ncycles']            # max of 1 output
test_size = 0.3

# model parameters
n_hidden_layers = 5                           # int (set to zero to use len(layer_sizes)
layer_sizes = 90                            # int or list of int
act_fn = nn.Tanh()                    # fn or list of fn

# training parameters
savemodel = True
n_epochs = 50000
loss_fn = nn.MSELoss()            # fn
test_loss_fn = nn.MSELoss()     # fn, if ==None > test loss fn == loss fn
learning_rate = 0.0001
optimizer = torch.optim.Adam            # fn
freq = 1
noise_fn = f.variable_top_wave(topfn=f.linear(0.5,2),min=0.05, freq=freq*n_epochs/1000)                 #class with a fn(self, x) function that can use floats or arrays 5.5 good
validate = True                     # run validation with the test date set, required to pick best model based on validation
pick_best_model = True
animate = True
update_freq = 2